# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: classic-ml-ws
#   namespace: bds
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 100Gi
#   storageClassName: fb-nfs3

# ---

kind: Service
apiVersion: v1
metadata:
  labels:
    app: classic-ml
  name: classic-ml
  namespace: bds
spec:
  ports:
    - port: 8888
  selector:
    app: classic-ml

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: classic-ml
  namespace: bds
spec:
  rules:
  - host: classic-ml.purestorage.int
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: classic-ml
            port: 
              number: 8888

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: bds
  name: classic-ml
spec:
  replicas: 1
  selector:
    matchLabels:
      app: classic-ml
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: classic-ml
    spec:
      volumes:
        - name: dataset-vol
          hostPath:
            path: /fbd/deephub/datasets
        # - name: workspace-vol
        #   persistentVolumeClaim:
        #     claimName: classic-ml-ws
        - name: workspace-vol
          hostPath:
            path: /fbd/jupyter
      imagePullSecrets:
        - name: regcred
      containers:
      - name: classic-ml
        image: "harbor.purestorage.int/reddot/classic-ml:23.07"
        imagePullPolicy: Always
        command:
          - /bin/bash
          - -c
          - |
            jupyter serverextension enable --py jupyterlab_s3_browser && \
            jupyter lab --config='~/.jupyter/jupyter_notebook_config.json' \
            --notebook-dir='/ws/notebooks' \
            --LabApp.token='Flash4all!' --LabApp.ip='0.0.0.0' --LabApp.allow_root=True
        resources:
          requests:
            memory: "32G"
            cpu: 4
          # limits:
          #   nvidia.com/gpu: 1
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: bds-s3
              key: access-key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: bds-s3
              key: secret-key
        - name: S3_ENDPOINT
          value: 192.168.170.11
        - name: S3_USE_HTTPS
          value: "0"
        - name: JUPYTERLAB_S3_ENDPOINT
          value: http://192.168.170.11
        - name: JUPYTERLAB_S3_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: bds-s3
              key: access-key
        - name: JUPYTERLAB_S3_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: bds-s3
              key: secret-key
        volumeMounts:
          - name: dataset-vol
            mountPath: /datasets
          - name: workspace-vol
            mountPath: /ws
